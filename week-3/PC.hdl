// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    Inc16(in=val, out=counter); // Incrementor

    Mux16(a=val, b=counter, sel=inc, out=firstCheck); // If inc is true then add 1 if not choose val

    Mux16(a=firstCheck, b=in, sel=load, out=secondCheck); // If load is 1 then write in else pass val

    Mux16(a=secondCheck, b=false, sel=reset, out=thirdCheck); // If reset is 1 then val=0 else pass val

    Register(in=thirdCheck, load=true, out=out, out=val); // Feed whatever the val is, output it, and plug it back in
    

}
